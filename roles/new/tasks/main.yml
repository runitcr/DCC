---
- name: Update the system.
  apt:
    upgrade: true
    update_cache: true
  when: not ansible_check_mode

- name: Install required packages.
  apt:
    name: curl
    state: latest
  when: not ansible_check_mode

- name: Define convenience variables.
  set_fact:
    _dcc_base58_chars:
      '1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,U,V,W,X,Y,Z,a,b,c,d,e,f,g,h,i,j,k,m,n,o,p,q,r,s,t,u,v,w,x,y,z'
    _docker_image_repository: '{{ docker_image_repository }}'
    _docker_image_repository_branch: '{{ docker_image_repository_branch }}'
    _docker_image_name: '{{ docker_image_name }}'
    _dockerhub_image_pull: '{{ dockerhub_image_pull }}'
    _dockerhub_user: '{{ dockerhub_user }}'
    _dockerhub_password: '{{ dockerhub_password }}'
    _dockerhub_email: '{{ dockerhub_mail }}'

- name: Request a hash with the given api key.
  command: >-
    curl -X POST "https://mainnet-node.decentralchain.io/utils/hash/secure"
    -H "accept: application/json" -H "Content-Type: text/plain"
    -d "{{ dcc_rest_api_key_hash }}"
  register: api_key_hash_result
  when: not ansible_check_mode
  changed_when: "'molecule-idempotence-notest' not in ansible_skip_tags"

- name: Convert the generated response in json to a dictionary.
  set_fact:
    api_key_hash_result: "{{ api_key_hash_result.stdout | from_json }}"

- name: Put the generated hash into a variable.
  set_fact:
    _dcc_rest_api_key_hash: "{{ api_key_hash_result.hash }}"

- name: Generate random wallet seed.
  set_fact:
    _dcc_wallet_seed:
      "{{ lookup('password', '/dev/null chars=' + _dcc_base58_chars + ' length=60') }}"

- name: Set wallet seed value.
  set_fact:
    _dcc_wallet_seed: '{{ dcc_wallet_seed }}'
  when:
    - dcc_wallet_seed is defined
    - dcc_wallet_seed | length > 0

- name: Setup Docker image.
  include_role:
    name: image
  vars:
    docker_image_repository: '{{ _docker_image_repository }}'
    docker_image_repository_branch: '{{ _docker_image_repository_branch }}'
    docker_image_name: '{{ _docker_image_name }}'
    dockerhub_image_pull: '{{ _dockerhub_image_pull }}'
    dockerhub_user: '{{ _dockerhub_user }}'
    dockerhub_password: '{{ _dockerhub_password }}'
    dockerhub_email: '{{ _dockerhub_mail }}'

- name: Create directories for Docker volumes (waves-config, waves-data).
  file:
    path: '{{ docker_volume_item }}'
    state: directory
    mode: "u=rw,g=r,o=r"
  loop:
    - '{{ dcc_docker_volumes_path }}/waves-config'
    - '{{ dcc_docker_volumes_path }}/waves-data'
  loop_control:
    loop_var: docker_volume_item
  when: not ansible_check_mode
  changed_when: "'molecule-idempotence-notest' not in ansible_skip_tags"

- name: Create waves.conf file.
  template:
    src: '{{ dcc_config_template }}'
    dest: '{{ dcc_docker_volumes_path }}/waves-config/waves.conf'
    force: true
    owner: root
    group: root
    mode: 0644
  changed_when: "'molecule-idempotence-notest' not in ansible_skip_tags"
  when: not ansible_check_mode

- name: Run Docker container.
  docker_container:
    name: 'dcc'
    hostname: 'dcc'
    image: '{{ docker_image_name }}'
    state: started
    restart_policy: always
    env:
      WAVES_WALLET_SEED: '{{ _dcc_wallet_seed }}'
      WAVES_WALLET_PASSWORD: '{{ dcc_wallet_password }}'
      WAVES_WALLET_LOG_LEVEL: '{{ dcc_log_level }}'
      WAVES_HEAP_SIZE: '{{ dcc_heap_size }}'
      WAVES_NETWORK: '{{ dcc_network }}'
      JAVA_OPTS: '{{ dcc_java_opts }}'
    exposed_ports:
      - '{{ dcc_port }}'
      - '{{ dcc_port_api }}'
    published_ports:
      - '{{ dcc_port }}:{{ dcc_port }}'
      - '{{ dcc_port_api }}:{{ dcc_port_api }}'
    volumes:
      - '{{ dcc_docker_volumes_path }}/waves-config/waves.conf:/etc/decentralchain/waves.conf'
      - '{{ dcc_docker_volumes_path }}/waves-data:/var/lib/decentralchain'
  changed_when: "'molecule-idempotence-notest' not in ansible_skip_tags"
  when: not ansible_check_mode
